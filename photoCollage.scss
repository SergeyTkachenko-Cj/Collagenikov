
$opaqueColor : rgba(0,0,0,0.6);

@mixin transit($sec) {
	-webkit-transition: $sec;
	-o-transition: $sec;
	transition: $sec;
}

@mixin widtheight($wh) {
	width: $wh;
	height: $wh;
}

@mixin hover-support {
  @media (hover: hover) and (pointer: fine) {
    & {
      @content;
    }
  }
}

body {
	background: lightgrey; 
}

.container {
	display: grid;
	grid-template-rows: repeat(3, 1fr);
	grid-template-columns: repeat(3, 1fr);
	grid-gap: .4rem;
	@include widtheight(100%);

	.frame {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		user-select: none;
		outline: none;
		-webkit-tap-highlight-color: transparent;
		border: none;
		cursor: pointer;
		overflow: hidden;
		background: #2f8396;
		@include transit(0.1s);

			@include hover-support {
				&:hover .circle1 {
					background: $opaqueColor;
				}

				&:hover .circle2,
				&:hover .circle3 {
					border-top-color: $opaqueColor;
					border-bottom-color: $opaqueColor;
				}

				&:hover .push {
					opacity: 0.6;
				}
			}

			&:active .circle1 {
				@include widtheight(5.8rem);
				background: $opaqueColor;
			}

			&:active .circle2, 
			&:active .circle3 {
				border-top-color: $opaqueColor;
				border-bottom-color: $opaqueColor;
			}

			&:active .push {
				opacity: 0.6;
			}

			.circles {
				position: absolute;
				display: inline-block;
				border: 0.2rem solid transparent;
				border-radius: 50%;
				background: transparent;
			}

			.circle1 {
				@include widtheight(6rem);
				@include transit(0.1s);
				box-sizing: border-box;
			}

			.circle2 {
				@include widtheight(10rem);
				@include transit(0.2s);
				transform: rotateZ(-35deg);
			}

			.circle3 {
				@include widtheight(15rem);
				@include transit(0.5s);
				transform: rotateZ(30deg);
			}

			.push {
				position: absolute;
				display: inline-block;
				padding-bottom: 4.5px;
				opacity: 0;
				font-family: 'Trebuchet MS', sans-serif;
				font-size: 1.8rem;
				color: #fff;
				@include transit(0.1s);
			}
	}

	.frame.second {
		grid-row: 1 / 2;
		grid-column: 2 / span 2;
	}

	.frame.forth {
		grid-area: 2 / 2 / 4 / 3;
	}
}



